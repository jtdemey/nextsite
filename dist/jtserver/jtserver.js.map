{"version":3,"sources":["webpack://jtsite/external \"express\"","webpack://jtsite/external \"http\"","webpack://jtsite/external \"native-url\"","webpack://jtsite/external \"next\"","webpack://jtsite/external \"path\"","webpack://jtsite/webpack/bootstrap","webpack://jtsite/./src/server/server.js"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","createServer","express","path","app","next","dev","handle","getRequestHandler","prepare","server","get","req","res","sendFile","join","process","cwd","all","listen","err","console","log","e","error","exit"],"mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,Y,qBCAzBF,EAAOC,QAAUC,QAAQ,S,qBCAzBF,EAAOC,QAAUC,QAAQ,e,qBCAzBF,EAAOC,QAAUC,QAAQ,S,qBCAzBF,EAAOC,QAAUC,QAAQ,UCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,Q,MCrBf,MAAM,aAAEQ,GAAiB,EAAQ,KAC3BC,EAAU,EAAQ,KAClBC,EAAO,EAAQ,KAKfC,GAJM,EAAQ,KACP,EAAQ,IAGTC,CAAK,CAAEC,KADP,KAENC,EAASH,EAAII,oBAGnB,WACE,UACQJ,EAAIK,UACV,MAAMC,EAASR,IACfQ,EAAOC,IAAI,KAAK,CAACC,EAAKC,KACpBA,EAAIC,SAASX,EAAKY,KAAKC,QAAQC,MAAO,uBAExCP,EAAOC,IAAI,UAAU,CAACC,EAAKC,KACzBA,EAAIC,SAASX,EAAKY,KAAKC,QAAQC,MAAO,wBAExCP,EAAOQ,IAAI,KAAK,CAACN,EAAKC,IACbN,EAAOK,EAAKC,KAErBH,EAAOS,OAfE,KAeWC,IAClB,GAAIA,EAAK,MAAMA,EACfC,QAAQC,IAAI,iDAEd,MAAOC,GACPF,QAAQG,MAAMD,GACdP,QAAQS,KAAK,KAnBjB,I","file":"jtserver.js","sourcesContent":["module.exports = require(\"express\");;","module.exports = require(\"http\");;","module.exports = require(\"native-url\");;","module.exports = require(\"next\");;","module.exports = require(\"path\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const { createServer } = require('http');\r\nconst express = require('express');\r\nconst path = require('path');\r\nconst url = require('native-url');\r\nconst next = require('next');\r\n\r\nconst dev = process.env.NODE_ENV !== 'production';\r\nconst app = next({ dev });\r\nconst handle = app.getRequestHandler();\r\nconst port = 3000;\r\n\r\n(async () => {\r\n  try {\r\n    await app.prepare();\r\n    const server = express();\r\n    server.get('/', (req, res) => {\r\n      res.sendFile(path.join(process.cwd(), 'pages/home.html'));\r\n    });\r\n    server.get('/about', (req, res) => {\r\n      res.sendFile(path.join(process.cwd(), 'pages/about.html'));\r\n    });\r\n    server.all(\"*\", (req, res) => {\r\n      return handle(req, res);\r\n    });\r\n    server.listen(port, err => {\r\n      if (err) throw err;\r\n      console.log(`> Ready on localhost:${port} - env ${process.env.NODE_ENV}`);\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    process.exit(1);\r\n  }\r\n})();"],"sourceRoot":""}